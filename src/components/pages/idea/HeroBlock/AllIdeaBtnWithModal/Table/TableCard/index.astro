---
interface Props {
  number: string;
  title: string;
  category: string;
  status: string;
  isReady: boolean;
}

const { number, title, category, status, isReady } = Astro.props;

const getStatus = (status: string) => {
  if (status === '1') return { text: 'Отложена', color: '#B2BBD8' };
  if (status === '2') return { text: 'На рассмотрении', color: '#81879A' };
  if (status === '3') return { text: 'В работе', color: '#198754' };
};
---

<tr>
  <td>{number}</td>
  <td
    ><a
      href="#"
      data-bs-toggle="modal"
      data-bs-target="#detailIdeaModal"
      data-bs-dismiss="modal">{title}</a
    >
  </td>
  <td>{category}</td>
  <td>11.11.2024</td>
  <td class="status-cell">
    <span
      style={`color: ${getStatus(status).color}; border: 1px solid ${getStatus(status).color}`}
    >
      {getStatus(status).text}
    </span>
  </td>
  <td class="ready-cell">
    {
      isReady ? (
        <svg
          width="25"
          height="25"
          viewBox="0 0 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M20.5 6.5L9.5 17.5L4.5 12.5"
            stroke="#198754"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      ) : (
        <svg
          width="25"
          height="25"
          viewBox="0 0 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M5.5 12.5H19.5"
            stroke="#B2BBD8"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      )
    }
  </td>
</tr>
