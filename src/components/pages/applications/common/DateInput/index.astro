---
import Input from '@components/pages/applications/common/Input/index.astro';

const { placeholder, datePickerId, isTimepicker } = Astro.props;
---

<div class="date-input" id={isTimepicker ? 'time' : 'date'} style="width: 100%">
  <Input
    placeholder={placeholder}
    type="date"
    datePickerId={datePickerId}
    isTimepicker={isTimepicker}
  />
</div>

<script>
  import IMask from 'imask';

  // Находим поле ввода даты
  const dateInput = document.getElementById('date').querySelector('input');

  if (dateInput) {
    // Инициализируем маску для поля ввода даты в формате ДД.ММ.ГГГГ
    IMask(dateInput, {
      mask: Date,
      pattern: 'd.`m.`Y',
      blocks: {
        d: {
          mask: IMask.MaskedRange,
          from: 1,
          to: 31,
          maxLength: 2,
        },
        m: {
          mask: IMask.MaskedRange,
          from: 1,
          to: 12,
          maxLength: 2,
        },
        Y: {
          mask: IMask.MaskedRange,
          from: 1900,
          to: 2999,
        },
      },
      // Функция форматирования даты в строку
      format: function (date) {
        let day = date.getDate();
        let month = date.getMonth() + 1;
        const year = date.getFullYear();

        // Добавляем ведущие нули для дня и месяца если нужно
        day = day < 10 ? '0' + day : day;
        month = month < 10 ? '0' + month : month;

        return `${day}.${month}.${year}`;
      },
      // Функция парсинга строки в объект Date
      parse: function (str) {
        const [day, month, year] = str.split('.');
        return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));
      },
    });
  }

  // Находим поле ввода времени
  const timeInput = document.getElementById('time').querySelector('input');

  if (timeInput) {
    // Инициализируем маску для поля ввода времени в формате ЧЧ:ММ
    IMask(timeInput, {
      mask: 'HH:MM',
      blocks: {
        HH: {
          mask: IMask.MaskedRange,
          from: 0,
          to: 23,
          maxLength: 2,
        },
        MM: {
          mask: IMask.MaskedRange,
          from: 0,
          to: 59,
          maxLength: 2,
        },
      },
    });
  }
</script>
